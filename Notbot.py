import requests
import json
import os
from datetime import datetime, timedelta

# –í—Å—Ç–∞–≤—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = '7909956325:AAHhd9WKiyfmHUT7g2AnMxIgVHp6Gup-M30'
BASE_URL = f'https://api.telegram.org/bot{TOKEN}'

# ID –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
ADMIN_ID = '1428115542'
DEVELOPER_USERNAME = 'xxqwer_x'

# –°–ª–æ–≤–Ω–∏–∫–∏ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—ñ–≤
user_state = {}
blocked_users = {}
admin_reply_state = {}
user_bots = {}

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑ —Ñ–∞–π–ª—É
if os.path.exists("blocked_users.json"):
    with open("blocked_users.json", "r") as file:
        blocked_users = json.load(file)

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –±–æ—Ç—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
if os.path.exists("user_bots.json"):
    with open("user_bots.json", "r") as file:
        user_bots = json.load(file)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
def send_message(chat_id, text, reply_markup=None):
    url = f'{BASE_URL}/sendMessage'
    payload = {
        'chat_id': chat_id,
        'text': text,
        'parse_mode': 'HTML'
    }
    if reply_markup:
        payload['reply_markup'] = reply_markup
    requests.post(url, json=payload)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
def save_blocked_users():
    with open("blocked_users.json", "w") as file:
        json.dump(blocked_users, file)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –±–æ—Ç—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
def save_user_bots():
    with open("user_bots.json", "w") as file:
        json.dump(user_bots, file)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def generate_admin_buttons(user_id):
    block_text = "üîì –†–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏" if blocked_users.get(user_id) else "üö´ –ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏"
    block_callback = f'unblock_{user_id}' if blocked_users.get(user_id) else f'block_{user_id}'
    return {
        'inline_keyboard': [
            [{'text': '‚úÖ –í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏', 'callback_data': f'reply_{user_id}'}, {'text': block_text, 'callback_data': block_callback}]
        ]
    }

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –±–æ—Ç–∞
def delete_inactive_bots():
    now = datetime.now()
    activity_timeout = timedelta(days=2)
    for user_id, bot_info in list(user_bots.items()):
        last_active = datetime.fromisoformat(bot_info['last_active'])
        if now - last_active > activity_timeout:
            del user_bots[user_id]
            save_user_bots()
            send_message(user_id, '–í–∞—à –±–æ—Ç –±—É–≤ –≤–∏–¥–∞–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –ø—Ä–æ—Ç—è–≥–æ–º 2 –¥–Ω—ñ–≤.')

# –û–±—Ä–æ–±–Ω–∏–∫ –∑–∞–ø–∏—Ç—ñ–≤
def handle_update(update):
    message = update.get('message', {})
    text = message.get('text', '')
    chat_id = message.get('chat', {}).get('id')

    # –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    callback_data = update.get('callback_query', {}).get('data')
    if callback_data:
        callback_query_id = update['callback_query']['id']
        from_id = update['callback_query']['from']['id']

        if callback_data.startswith("reply_"):
            user_id = int(callback_data.split("_")[1])
            admin_reply_state[from_id] = user_id
            send_message(from_id, '–í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å, —ñ —è –Ω–∞–¥—ñ—à–ª—é —ó—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É.')

        elif callback_data.startswith("block_"):
            user_id = int(callback_data.split("_")[1])
            blocked_users[user_id] = True
            save_blocked_users()
            send_message(from_id, '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ.', generate_admin_buttons(user_id))

        elif callback_data.startswith("unblock_"):
            user_id = int(callback_data.split("_")[1])
            blocked_users.pop(user_id, None)
            save_blocked_users()
            send_message(from_id, '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–æ.', generate_admin_buttons(user_id))

        return

    # –Ø–∫—â–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä —É —Ä–µ–∂–∏–º—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    if chat_id == int(ADMIN_ID) and chat_id in admin_reply_state:
        target_user = admin_reply_state.pop(chat_id)
        send_message(target_user, f'–í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {text}')
        send_message(chat_id, '–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É.')

    # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω—É–≤ "‚ö°–ù–∞–ø–∏—Å–∞—Ç–∏"
    elif text == '‚ö°–ù–∞–ø–∏—Å–∞—Ç–∏':
        if blocked_users.get(chat_id):
            send_message(chat_id, '–í–∏–±–∞—á—Ç–µ, –∞–ª–µ –≤–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ —ñ –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.')
            return

        user_state[chat_id] = 'waiting_for_message'
        send_message(chat_id, '–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —ñ —è –Ω–∞–¥—ñ—à–ª—é –π–æ–≥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É.')

    # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω—É–≤ "–ê–Ω–æ–Ω—ñ–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"
    elif text == '–ê–Ω–æ–Ω—ñ–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è':
        if blocked_users.get(chat_id):
            send_message(chat_id, '–í–∏–±–∞—á—Ç–µ, –∞–ª–µ –≤–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ —ñ –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.')
            return

        user_state[chat_id] = 'waiting_for_anonymous_message'
        send_message(chat_id, '–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —ñ —è –Ω–∞–¥—ñ—à–ª—é –π–æ–≥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É –∞–Ω–æ–Ω—ñ–º–Ω–æ.')

    # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É —Ä–µ–∂–∏–º—ñ "–ù–∞–ø–∏—Å–∞—Ç–∏"
    elif user_state.get(chat_id) == 'waiting_for_message':
        send_message(ADMIN_ID, f'–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ @{message["chat"].get("username", "–Ω–µ–≤—ñ–¥–æ–º–∏–π")}:\n\n{text}', generate_admin_buttons(chat_id))
        send_message(chat_id, '‚ú®–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ')
        user_state[chat_id] = None

    # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É —Ä–µ–∂–∏–º—ñ "–ê–Ω–æ–Ω—ñ–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"
    elif user_state.get(chat_id) == 'waiting_for_anonymous_message':
        send_message(ADMIN_ID, f'–ê–Ω–æ–Ω—ñ–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n\n{text}', generate_admin_buttons(chat_id))
        send_message(chat_id, '‚ú®–ê–Ω–æ–Ω—ñ–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ')
        user_state[chat_id] = None

    # –ö–æ–º–∞–Ω–¥–∞ "üñáÔ∏è–Ü–Ω–§–æ"
    elif text == 'üñáÔ∏è–Ü–Ω–§–æ':
        info_text = "üñáÔ∏è–Ü–Ω–§–æ\n„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è\nüìå–°—Ç–∞—Ä—Ç –±–æ—Ç–∞: 30.10.2024 —Ä–æ–∫—É"
        send_message(chat_id, info_text)

    # –ö–æ–º–∞–Ω–¥–∞ "‚öôÔ∏è–•–æ—á—É —Ç–∞–∫–æ–≥–æ —Å–∞–º–æ–≥–æ –±–æ—Ç–∞"
    elif text == '‚öôÔ∏è–•–æ—á—É —Ç–∞–∫–æ–≥–æ —Å–∞–º–æ–≥–æ –±–æ—Ç–∞':
        send_message(chat_id, f'–ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ —á–∞—Ç —ñ–∑ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–æ–º: @{DEVELOPER_USERNAME}')

    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞
    elif text.startswith('/create_my_bot'):
        user_state[chat_id] = 'waiting_for_bot_token'
        send_message(chat_id, '–í–≤–µ–¥—ñ—Ç—å —Ç–æ–∫–µ–Ω –≤–∞—à–æ–≥–æ –±–æ—Ç–∞.')

    # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å —Ç–æ–∫–µ–Ω
    elif user_state.get(chat_id) == 'waiting_for_bot_token':
        token = text
        user_state[chat_id] = 'waiting_for_user_id'
        user_bots[chat_id] = {
            'token': token,
            'username': message.get('chat', {}).get('username'),
            'last_active': datetime.now().isoformat()
        }
        save_user_bots()
        send_message(chat_id, '–¢–æ–∫–µ–Ω –ø—Ä–∏–π–Ω—è—Ç–æ. –¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à ID.')

    # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å —Å–≤—ñ–π ID
    elif user_state.get(chat_id) == 'waiting_for_user_id':
        user_id = text
        user_bots[chat_id]['user_id'] = user_id
        save_user_bots()
        send_message(chat_id, f'‚öôÔ∏è–ë–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ –≤: @{message.get("chat", {}).get("username")}\n'
                              f'üî∏–ë–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è –∑–≤\'—è–∑–∫—É —ñ–∑ @{DEVELOPER_USERNAME}')
        user_state[chat_id] = None

    # –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /start
    elif text == '/start':
        main_menu(chat_id)

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏
def main_menu(chat_id):
    reply_markup = {
        'keyboard': [
            [{'text': '‚ö°–ù–∞–ø–∏—Å–∞—Ç–∏'}, {'text': '–ê–Ω–æ–Ω—ñ–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è'}, {'text': 'üñáÔ∏è–Ü–Ω–§–æ'}],
            [{'text': '‚öôÔ∏è–•–æ—á—É —Ç–∞–∫–æ–≥–æ —Å–∞–º–æ–≥–æ –±–æ—Ç–∞'}]
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    welcome_text = "üî∏–ë–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è –∑–≤'—è–∑–∫—É —ñ–∑ @xxqwer_x"
    send_message(chat_id, welcome_text, reply_markup=reply_markup)

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
def main():
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–æ–≤–∏—Ö –æ–Ω–æ–≤–ª–µ–Ω—å
    last_update_id = None
    while True:
        updates = requests.get(f'{BASE_URL}/getUpdates?offset={last_update_id}').json()
        for update in updates['result']:
            handle_update(update)
            last_update_id = update['update_id'] + 1

        # –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏—Ö –±–æ—Ç—ñ–≤
        delete_inactive_bots()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    main()
